// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Axios = require("axios");

function create(code, name, axiosConfig) {
  var data = {
    code: code,
    name: name
  };
  return Axios.post("/ballot/create", data, axiosConfig);
}

function find(code, axiosConfig) {
  var data = {
    code: code
  };
  return Axios.post("/ballot/find", data, axiosConfig);
}

function $$delete(code, axiosConfig) {
  var data = {
    code: code
  };
  return Axios.post("/ballot/delete", data, axiosConfig);
}

function blindVote(candidateEmail, axiosConfig) {
  var data = {
    candidate_email: candidateEmail
  };
  return Axios.post("/ballot/blind-vote", data, axiosConfig);
}

function signBytes(blinded, voterEmail, axiosConfig) {
  var data = {
    blinded: blinded,
    voter_email: voterEmail
  };
  return Axios.post("/ballot/sign-bytes", data, axiosConfig);
}

function unblindSign(signed, unblinder, axiosConfig) {
  var data = {
    signed: signed,
    unblinder: unblinder
  };
  return Axios.post("/ballot/unblind-sign", data, axiosConfig);
}

function verifySign(voteHash, unblinded, axiosConfig) {
  var data = {
    vote_hash: voteHash,
    unblinded: unblinded
  };
  return Axios.post("/ballot/verify-sign", data, axiosConfig);
}

function findBallots(email, axiosConfig) {
  var data = {
    email: email
  };
  return Axios.post("/ballot/find-ballots", data, axiosConfig);
}

function restartOpenBallots(axiosConfig) {
  var data = {
    def: 0
  };
  return Axios.post("/ballot/restart", data, axiosConfig);
}

function update(code, name, regexCandidate, regexVoter, phase, axiosConfig) {
  var data = {
    code: code,
    name: name,
    regex_candidate: regexCandidate,
    regex_voter: regexVoter,
    phase: phase
  };
  return Axios.post("/ballot/update", data, axiosConfig);
}

exports.create = create;
exports.find = find;
exports.$$delete = $$delete;
exports.blindVote = blindVote;
exports.signBytes = signBytes;
exports.unblindSign = unblindSign;
exports.verifySign = verifySign;
exports.findBallots = findBallots;
exports.restartOpenBallots = restartOpenBallots;
exports.update = update;
/* axios Not a pure module */
